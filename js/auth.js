// /js/auth.js
import { 
    createUserWithEmailAndPassword, 
    signInWithEmailAndPassword, 
    signOut, 
    onAuthStateChanged,
    updateProfile,
    sendEmailVerification
} from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";
import { auth } from './firebaseClient.js'; 
import { showToast } from './uiElements.js';
import { updateGlobalCartCount } from './cart.js';

// --- –ü–†–û–ú–Ü–° –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó ---
export const authReady = new Promise(resolve => {
    // –¶–µ–π —Å–ª—É—Ö–∞—á —Å–ø—Ä–∞—Ü—é—î –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ, —â–æ–± –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
    const unsubscribe = onAuthStateChanged(auth, (user) => {
        console.log("auth.js: –ü–æ—á–∞—Ç–∫–æ–≤–∏–π onAuthStateChanged (–¥–ª—è authReady) —Å–ø—Ä–∞—Ü—é–≤–∞–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user ? user.uid : null);
        resolve(user); // –í–∏—Ä—ñ—à—É—î–º–æ –ø—Ä–æ–º—ñ—Å –∑ –æ–±'—î–∫—Ç–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∞–±–æ null)
        unsubscribe(); // –í–∞–∂–ª–∏–≤–æ: –≤—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è, —â–æ–± –≤—ñ–Ω –Ω–µ —Å–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞–≤ –Ω–∞ –ø–æ–¥–∞–ª—å—à—ñ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É
    });
});
// --- –ö–Ü–ù–ï–¶–¨ –ü–†–û–ú–Ü–°–£ ---


// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É —Ñ–æ—Ä–º—ñ
function displayFormError(formId, message) {
    const errorElement = document.getElementById(`${formId}-error-message`);
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —Ñ–æ—Ä–º–∏
function clearFormError(formId) {
    const errorElement = document.getElementById(`${formId}-error-message`);
    if (errorElement) {
        errorElement.textContent = '';
        errorElement.style.display = 'none';
    }
}

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async function handleRegister(event) {
    event.preventDefault();
    clearFormError('register');
    const form = event.target;
    const name = form.name.value.trim();
    const email = form.email.value;
    const password = form.password.value;
    const confirmPassword = form.confirmPassword.value;

    if (password !== confirmPassword) {
        displayFormError('register', "–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å.");
        return;
    }
    if (password.length < 6) {
        displayFormError('register', "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 6 —Å–∏–º–≤–æ–ª—ñ–≤.");
        return;
    }

    try {
        const userCredential = await createUserWithEmailAndPassword(auth, email, password);
        const user = userCredential.user;
        console.log("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π:", user.uid);
        
        if (name) {
            await updateProfile(user, { displayName: name });
            console.log("–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ:", name);
        }
        
        await sendEmailVerification(user);
        showToast("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –õ–∏—Å—Ç –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –≤–∞—à email.", 5000);
        
        setTimeout(() => {
            window.location.href = 'index.html'; 
        }, 3000);

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:", error);
        let message = "–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.";
        if (error.code === 'auth/email-already-in-use') {
            message = "–¶–µ–π email –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è.";
        } else if (error.code === 'auth/weak-password') {
            message = "–ü–∞—Ä–æ–ª—å –∑–∞–Ω–∞–¥—Ç–æ —Å–ª–∞–±–∫–∏–π.";
        } else if (error.code === 'auth/invalid-email') {
            message = "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç email.";
        }
        displayFormError('register', message);
        showToast(message, 4000);
    }
}

// –í—Ö—ñ–¥ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async function handleLogin(event) {
    event.preventDefault();
    clearFormError('login');
    const form = event.target;
    const email = form.email.value;
    const password = form.password.value;

    try {
        const userCredential = await signInWithEmailAndPassword(auth, email, password);
        const user = userCredential.user;
        console.log("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–π—à–æ–≤:", user.uid);
        showToast(`–í—ñ—Ç–∞—î–º–æ –∑ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, ${user.displayName || user.email.split('@')[0]}!`, 3000);
        
        const urlParams = new URLSearchParams(window.location.search);
        const redirectUrl = urlParams.get('redirectUrl') || 'index.html';
        
        setTimeout(() => {
            window.location.href = redirectUrl;
        }, 1500);

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É:", error);
        let message = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å.";
        if (error.code === 'auth/user-not-found' || 
            error.code === 'auth/wrong-password' || 
            error.code === 'auth/invalid-credential' ||
            error.code === 'auth/invalid-email') {
            message = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å.";
        }
        displayFormError('login', message);
        showToast(message, 4000);
    }
}

// –í–∏—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export async function handleLogout() {
    try {
        await signOut(auth);
        console.log("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–π—à–æ–≤.");
        showToast("–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ —Å–∏—Å—Ç–µ–º–∏.", 3000);
        window.location.href = 'index.html'; 
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É:", error);
        showToast("–ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.", 4000);
    }
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è UI –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
function updateAuthUI(user) {
    console.log("updateAuthUI –≤–∏–∫–ª–∏–∫–∞–Ω–æ. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user ? user.uid : null); // –î–æ–¥–∞–Ω–æ –ª–æ–≥
    const loginLinkAnchor = document.querySelector('header .header-actions a[href="login.html"]');
    const headerActionsContainer = loginLinkAnchor ? loginLinkAnchor.parentElement : null;

    if (!headerActionsContainer) {
        console.warn("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä .header-actions –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó.");
        return;
    }
    
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—é —Ç–∞ –≤–∏—Ö–æ–¥—É, —è–∫—â–æ –≤–æ–Ω–∏ —î
    const existingProfileLink = headerActionsContainer.querySelector('.profile-link-header');
    const existingLogoutButton = headerActionsContainer.querySelector('.logout-btn'); // –†–∞–Ω—ñ—à–µ –±—É–≤ logout-icon-link
    const existingUsernameDisplay = headerActionsContainer.querySelector('.username-display');


    if (existingProfileLink) existingProfileLink.remove();
    if (existingLogoutButton) existingLogoutButton.remove();
    // if (existingUsernameDisplay) existingUsernameDisplay.remove(); // –¶–µ —á–∞—Å—Ç–∏–Ω–∞ profileLink, –≤–∏–¥–∞–ª–∏—Ç—å—Å—è —Ä–∞–∑–æ–º –∑ –Ω–∏–º

    const cartLinkAnchor = headerActionsContainer.querySelector('a[href="cart.html"]');

    if (user) {
        console.log("updateAuthUI: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —î. –û–Ω–æ–≤–ª—é—î–º–æ UI –¥–ª—è –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–æ–≥–æ —Å—Ç–∞–Ω—É."); // –î–æ–¥–∞–Ω–æ –ª–æ–≥
        if (loginLinkAnchor) loginLinkAnchor.style.display = 'none';

        const profileLink = document.createElement('a');
        profileLink.href = 'profile.html';
        profileLink.className = 'icon-link profile-link-header'; // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –ª–µ–≥—à–æ–≥–æ –ø–æ—à—É–∫—É
        profileLink.setAttribute('aria-label', '–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å');
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ innerHTML, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —ñ–∫–æ–Ω–∫—É —Ç–∞ span –¥–ª—è —ñ–º–µ–Ω—ñ
        profileLink.innerHTML = `üë§ <span class="username-display">${user.displayName || user.email.split('@')[0]}</span>`;
        
        const logoutButton = document.createElement('a');
        logoutButton.href = "#"; 
        logoutButton.className = 'icon-link logout-btn'; // –ó–º—ñ–Ω–µ–Ω–æ –∫–ª–∞—Å –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –ø–æ—à—É–∫—É
        logoutButton.setAttribute('aria-label', '–í–∏—Ö—ñ–¥');
        logoutButton.innerHTML = 'üö™'; 
        logoutButton.style.marginLeft = '10px';
        logoutButton.addEventListener('click', (e) => {
            e.preventDefault();
            handleLogout();
        });

        if (cartLinkAnchor) {
            headerActionsContainer.insertBefore(profileLink, cartLinkAnchor);
            headerActionsContainer.insertBefore(logoutButton, cartLinkAnchor);
        } else { 
            headerActionsContainer.appendChild(profileLink);
            headerActionsContainer.appendChild(logoutButton);
        }

    } else {
        console.log("updateAuthUI: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î. –û–Ω–æ–≤–ª—é—î–º–æ UI –¥–ª—è –Ω–µ–∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–æ–≥–æ —Å—Ç–∞–Ω—É."); // –î–æ–¥–∞–Ω–æ –ª–æ–≥
        if (loginLinkAnchor) loginLinkAnchor.style.display = 'inline-block';
        // –ï–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—é —Ç–∞ –≤–∏—Ö–æ–¥—É –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω—ñ –≤–∏—â–µ
    }
    updateGlobalCartCount(); 
}


// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ó–ú–Ü–ù —Å—Ç–∞–Ω—É –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (—Ü–µ–π —Å–ª—É—Ö–∞—á —Ä–µ–∞–≥—É—î –Ω–∞ –≤—Ö—ñ–¥/–≤–∏—Ö—ñ–¥ –ü–Ü–°–õ–Ø –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)
onAuthStateChanged(auth, (user) => {
    console.log("auth.js: –î–∏–Ω–∞–º—ñ—á–Ω–∏–π onAuthStateChanged —Å–ø—Ä–∞—Ü—é–≤–∞–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user ? user.uid : '–Ω–µ–º–∞—î');
    updateAuthUI(user); 
    
    const protectedPages = ['profile.html', 'checkout.html'];
    const currentPage = window.location.pathname.split('/').pop();

    // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ù–ï –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π (user is null) –Ü –≤—ñ–Ω –Ω–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    if (!user && protectedPages.includes(currentPage)) {
        console.log(`auth.js (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π): –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –¥–ª—è ${currentPage}. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≤—Ö—ñ–¥.`);
        const redirectUrl = encodeURIComponent(window.location.pathname + window.location.search);
        // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –º–∏ –Ω–µ –Ω–∞ login.html, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ —Ü–∏–∫–ª—É
        if (currentPage !== 'login.html' && currentPage !== 'register.html') {
            window.location.href = `login.html?redirectUrl=${redirectUrl}`;
        }
    }
});

// –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –≤—Ö–æ–¥—É —Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
export function initializeAuthForms() {
    const loginForm = document.getElementById('login-form');
    if (loginForm) {
        loginForm.addEventListener('submit', handleLogin);
    }

    const registerForm = document.getElementById('register-form');
    if (registerForm) {
        registerForm.addEventListener('submit', handleRegister);
    }
}